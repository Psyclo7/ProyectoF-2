// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoF_2.Models;

#nullable disable

namespace ProyectoF_2.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20240109060417_votaciones2")]
    partial class votaciones2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoF_2.Models.Entidades.Candidato", b =>
                {
                    b.Property<int>("id_candidato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_candidato"));

                    b.Property<int>("Eleccionid_eleccion")
                        .HasColumnType("int");

                    b.Property<string>("id_eleccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_candidato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_candidato");

                    b.HasIndex("Eleccionid_eleccion");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("ProyectoF_2.Models.Entidades.Eleccion", b =>
                {
                    b.Property<int>("id_eleccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_eleccion"));

                    b.Property<int>("Usuarioid_usuario")
                        .HasColumnType("int");

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_registro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_eleccion");

                    b.HasIndex("Usuarioid_usuario");

                    b.ToTable("Elecciones");
                });

            modelBuilder.Entity("ProyectoF_2.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("apellido_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documento_identidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoF_2.Models.Entidades.Votacion", b =>
                {
                    b.Property<int>("id_votacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_votacion"));

                    b.Property<int>("Candidatoid_candidato")
                        .HasColumnType("int");

                    b.Property<string>("fecha_votacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id_candidato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_votacion");

                    b.HasIndex("Candidatoid_candidato");

                    b.ToTable("Votaciones");
                });

            modelBuilder.Entity("ProyectoF_2.Models.Entidades.Candidato", b =>
                {
                    b.HasOne("ProyectoF_2.Models.Entidades.Eleccion", "Eleccion")
                        .WithMany()
                        .HasForeignKey("Eleccionid_eleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eleccion");
                });

            modelBuilder.Entity("ProyectoF_2.Models.Entidades.Eleccion", b =>
                {
                    b.HasOne("ProyectoF_2.Models.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuarioid_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoF_2.Models.Entidades.Votacion", b =>
                {
                    b.HasOne("ProyectoF_2.Models.Entidades.Candidato", "Candidato")
                        .WithMany()
                        .HasForeignKey("Candidatoid_candidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });
#pragma warning restore 612, 618
        }
    }
}
